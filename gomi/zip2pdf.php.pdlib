<?php

define( "KINDLE_WIDTH" , 560 );
define( "KINDLE_HEIGHT", 734 );

$start = time();

if( $argc > 1 ){
	$input_file_name = $argv[1];
	print "input file '$input_file_name'\n";
	$path_data = pathinfo( $input_file_name );
	
	if( $path_data[ "extension" ] != 'zip' ){
		print "no zip file.";
		exit;
	}

	if(	preg_match( "/\[(.*?)\](.*)/", $path_data[ 'filename' ], $matches ) ){
		$author = "\xEF\xBB\xBF" . mb_convert_encoding($matches[1],"UTF-8");
		$title = "\xEF\xBB\xBF" . mb_convert_encoding($matches[2],"UTF-8");
	}else{
		$author = 'unknown';
		$title = $path_data[ 'filename' ];
	}
	
	$za = new ZipArchive();
	$pdf = PDF_new();
	//PDF_begin_document($pdf, "./test.pdf", "compatibility=1.4");
	PDF_begin_document($pdf, "./test.pdf", "");

	pdf_set_info($pdf, "Author", $author);
	pdf_set_info($pdf, "Title", $title);
	pdf_set_info($pdf, "Creator", "zip2pdf");
	//pdf_set_info($pdf, "Subject", "subject tte nani");

	//print $input_file_name;
	$za->open( $input_file_name);
	
	$tmp_file = "/tmp/tmp.png";

	$image = new Imagick();
	$canvas = new Imagick();
	//$image->setImageChannelDepth ( imagick::CHANNEL_GRAY , 4);
	//$image->setGravity( imagick::GRAVITY_SOUTHEAST );

	$canvas->setFormat('png');
	$canvas->setCompressionQuality(90);
	//グレースケール化
	//$canvas->setColorspace(Imagick::COLORSPACE_GRAY);

	for( $i = 0; $i < $za->numFiles && $i < 20 ; $i++ ){
	//for( $i = 0; $i < $za->numFiles ; $i++ ){
	
    	$stat = $za->statIndex( $i );

	    $file_name = mb_convert_encoding( ( $stat['name'] . PHP_EOL ),"UTF8","SJIS" );
		$path_data = pathinfo( $file_name );
		print $file_name;
		if( in_array( $path_data[ "extension" ], Array("jpg","png","jpeg","gif") ) ){
			print "no support extension.\n";
			continue;
		}

		$image->readImageBlob($za->getFromIndex($i));

		//色震度
		if( $stat[ "size" ] > 300000 ){
		}else{
			//余白除去
			$image->trimImage( 30.0 );
		}

		$width = $image->getImageWidth(); //横幅（ピクセル）
		$height = $image->getImageHeight(); //縦幅（ピクセル）

		$new_width = KINDLE_WIDTH;
		$rate = $new_width / $width;
		$new_height = $rate * $height;
		if( $new_height > KINDLE_HEIGHT ){
			$new_height = KINDLE_HEIGHT;
			$rate = $new_height / $height;
			$new_width = $rate * $width;

			$l_margine = (KINDLE_WIDTH - $new_width)/2;
			$t_margine = 0;
		}else{
			$l_margine = 0;
			$t_margine = (KINDLE_HEIGHT - $new_height)/2;
		}

		//リサイズ
		//imagecopyresized($new_image,$img,$l_margine,$t_margine,0,0,$new_width,$new_height,$width,$height);
		$image->resizeImage( KINDLE_WIDTH, KINDLE_HEIGHT, imagick::FILTER_MITCHELL, 1, true);
		$image->setImagePage( KINDLE_WIDTH, KINDLE_HEIGHT, 0, 0 );

		$canvas->newImage( KINDLE_WIDTH, KINDLE_HEIGHT, new ImagickPixel("white"));
		$canvas->compositeImage($image,imagick::COMPOSITE_OVER,$l_margine,$t_margine);
		$image->clear();

		//ガンマ補正
		$canvas->setImageColorspace(Imagick::COLORSPACE_GRAY);
		$canvas->setImageDepth( 4);
		$canvas->setImageGamma( 1.6 );

		$canvas->writeImage( $tmp_file );
		$canvas->clear();
		
		//pdfへの書き出し
		pdf_begin_page_ext($pdf, KINDLE_WIDTH, KINDLE_HEIGHT,"" );
		$img_id = pdf_load_image( $pdf, "png", $tmp_file, "" );
		//print "scale ".($resolution['x']/72);
		PDF_fit_image($pdf,$img_id,0,0,"");
		PDF_close_image( $pdf,$img_id);
		pdf_end_page_ext( $pdf,"");
	}
	$image->destroy();
	$canvas->destroy();

	pdf_close($pdf);
	$za->close();

	print "time:".(time()-$start)."sec";

}else{
	print "not args";
}

?>
